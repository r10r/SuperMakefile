#
# libcx uncrustify config file
# all options: `uncrustify --show-config | less`
#

# [ General Options ]

indent_with_tabs	= 2		# 1=indent to level only, 2=indent with tabs
input_tab_size		= 8		# original tab size
output_tab_size		= 8		# new tab size
indent_columns		= output_tab_size
indent_label		= 1		# pos: absolute col, neg: relative column

eat_blanks_after_open_brace 	= true
eat_blanks_before_close_brace 	= true
#nl_remove_extra_newlines 		= 1
nl_start_of_file			= remove
nl_end_of_file				= force
nl_end_of_file_min			= 1
nl_after_semicolon 			= true
nl_after_brace_close 		= true
nl_after_struct				= 2


# [ inter-symbol newlines ]

nl_enum_brace		= add		# "enum {" vs "enum \n {"
nl_union_brace		= add		# "union {" vs "union \n {"
nl_struct_brace		= add		# "struct {" vs "struct \n {"
nl_do_brace 		= add		# "do {" vs "do \n {"
nl_if_brace 		= add		# "if () {" vs "if () \n {"
nl_for_brace 		= add		# "for () {" vs "for () \n {"
nl_else_brace 		= add		# "else {" vs "else \n {"
nl_while_brace 		= add		# "while () {" vs "while () \n {"
nl_switch_brace 	= add		# "switch () {" vs "switch () \n {"
nl_brace_while		= add		# "} while" vs "} \n while" - cuddle while
nl_brace_else		= add		# "} else" vs "} \n else" - cuddle else
nl_func_var_def_blk	= 1
nl_fcall_brace		= add		# "list_for_each() {" vs "list_for_each()\n{"
nl_fdef_brace		= add		# "int foo() {" vs "int foo()\n{"

nl_var_def_blk_start 	= 1
nl_var_def_blk_end 		= 1


sp_enum_assign = Force

# [ Comments ]

nl_before_block_comment 	= 2
nl_after_multiline_comment 	= false


# [ Functions ]

nl_after_func_body 				= 2
nl_after_func_body_one_liner 	= 2
nl_func_decl_end				= remove
nl_func_def_end					= remove
nl_func_type_name 				= add
nl_func_proto_type_name 		= add


# [ Pointers ]

sp_before_ptr_star			= remove
sp_between_ptr_star			= remove
sp_after_ptr_star 			= add
sp_after_ptr_star_func 		= add
sp_before_unnamed_ptr_star 	= remove
sp_ptr_star_paren 			= add


# [ Source code modifications ]
# these modifications are evil and can alter
# the code flow when macros used withing braces

mod_paren_on_return	= remove   	# "return 1;" vs "return (1);"
mod_full_brace_do	= ignore	    # "do a--; while ();" vs "do { a--; } while ();"
mod_full_brace_for	= ignore	    # "for () a--;" vs "for () { a--; }"
mod_full_brace_function = ignore   
mod_full_brace_if	= ignore	    # "if (a) a--;" vs "if (a) { a--; }"
mod_full_brace_if_chain = false
mod_full_brace_while	= ignore	# "while (a) a--;" vs "while (a) { a--; }"
mod_full_brace_using    = ignore
mod_full_brace_nl	= 1
mod_case_brace = ignore
mod_move_case_break = true

# [ inter-character spacing options ]

sp_sizeof_paren		= remove	# "sizeof (int)" vs "sizeof(int)"
sp_before_sparen	= force		# "if (" vs "if("
sp_after_sparen		= force		# "if () {" vs "if (){"
sp_after_cast		= remove	# "(int) a" vs "(int)a"
sp_inside_braces	= add		# "{ 1 }" vs "{1}"
sp_inside_braces_struct	= add		# "{ 1 }" vs "{1}"
sp_inside_braces_enum	= add		# "{ 1 }" vs "{1}"
sp_assign		= add
sp_arith		= add
sp_bool			= add
sp_compare		= add
sp_assign		= add
sp_after_comma		= add
sp_func_def_paren	= remove	# "int foo (){" vs "int foo(){"
sp_func_call_paren	= remove	# "foo (" vs "foo("
sp_func_proto_paren	= remove	# "int foo ();" vs "int foo();"


# [ Aligning stuff ]

align_with_tabs		= TRUE		# use tabs to align
align_on_tabstop	= TRUE 		# align on tabstops
align_enum_equ_span		= 8		# '=' in enum definition
align_struct_init_span	= 3		# align stuff in a structure init '= { }'
align_right_cmt_span	= 3
